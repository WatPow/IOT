# Sécurité de l’IoT

## Objectifs de la sécurité IoT
Comme pour tout système d’information, la sécurité des objets connectés vise d’abord à préserver les trois piliers **CIA** : **Confidentialité, Intégrité et Disponibilité** des données et services, et ce *« en permanence »* (quelle que soit la durée de vie de l’objet). Au-delà de ces principes fondamentaux, le contexte IoT amène des objectifs supplémentaires spécifiques :

- **Éviter la contrefaçon** : s’assurer qu’un objet ou ses composants ne puissent être copiés ou usurpés (garantir l’authenticité de l’appareil).
- **Protéger la propriété intellectuelle** : empêcher qu’un tiers ne vole ou duplique le savoir-faire embarqué (code embarqué, modèles, données sensibles).
- **Empêcher le piratage du firmware** : éviter toute altération ou falsification non autorisée du logiciel interne de l’objet (tampering), que ce soit via une mise à jour malveillante ou une modification physique
- **Prévenir le détournement d’usage (repurposing)** : ne pas permettre qu’un objet soit utilisé à des fins non prévues ou malveillantes (exemple : transformer un capteur anodin en outil d’attaque).
- **Garantir l’intégrité des données et des commandes** : les mesures et messages émis par l’objet ne doivent pas pouvoir être modifiés ou falsifiés par un attaquant. De même, les commandes reçues par l’objet doivent être authentiques et non altérées.
- **Protéger la vie privée** : éviter les fuites de données personnelles ou sensibles collectées par les objets (caméras, microphones, capteurs médicaux…), et empêcher la surveillance indésirable des utilisateurs via leurs objets connectés.

Atteindre ces objectifs de sécurité IoT est indispensable pour **tenir la confiance des utilisateurs** et **protéger les personnes, les données et les marques** associées aux produits IoT.

## Exemples de menaces et vulnérabilités
Les objets connectés sont exposés à de nombreuses **menaces** et présentent parfois des **vulnérabilités** exploitables par des attaquants. En voici quelques exemples marquants :

- **Attaques par déni de service (DoS)** : un attaquant peut tenter de **saturer l’objet ou le service IoT** en lui envoyant une énorme quantité de requêtes ou de messages. Par exemple, inonder un objet de messages via MQTT peut épuiser ses ressources et le rendre indisponible. De même, saturer le broker ou le backend cloud de messages (légitimes ou factices) peut provoquer un DoS à plus grande échelle.
- **Rançongiciel (ransomware)** : comme sur un PC, un malware peut chiffrer les données d’un objet connecté ou le bloquer, puis exiger une rançon. Ce scénario a déjà été observé sur des systèmes IoT, rendant l’appareil inutilisable jusqu’au paiement.
- **Prise de contrôle à distance** : si un attaquant exploite une faille (ex. mot de passe par défaut, buffer overflow dans le firmware), il peut **obtenir un accès non autorisé** à l’objet. Il pourrait alors en prendre le contrôle, par exemple allumer/éteindre un dispositif à distance, intercepter ses données, ou s’en servir comme point d’entrée dans le réseau local.
- **Exploitation de failles logicielles dans le temps** : la durée de vie des objets IoT étant longue, de nouvelles vulnérabilités peuvent apparaître après leur déploiement. Sans mises à jour, un attaquant peut **tirer parti d’une faille découverte ultérieurement** pour compromettre l’appareil des mois ou années après son installation.
- **Atteinte à la vie privée** : la compromission d’un objet peut mener à de la **surveillance illicite**. Par exemple, le piratage d’une caméra connectée ou d’une enceinte vocale permettrait à un intrus d’espionner des conversations ou des images privées. De même, des capteurs de santé piratés pourraient révéler des données médicales sensibles.
- **Botnets IoT** : une fois compromis, des objets connectés peuvent être enrôlés dans un botnet (réseau d’appareils zombies). Des malwares comme *Mirai* ont ainsi infecté des caméras et routeurs IoT à grande échelle, les détournant pour lancer des attaques DDoS massives sur des sites web. Ce type de menace profite du grand nombre d’objets souvent mal sécurisés.

Ces exemples illustrent la diversité des risques : sans mesures adaptées, un objet connecté peut devenir à la fois une **cible** (vol de données, sabotage) et une **arme** (relais d’attaque) pour des hackers.

## Mécanismes de sécurité recommandés
Pour se prémunir contre ces menaces, une **défense en profondeur** doit être mise en place dans les solutions IoT. Les bonnes pratiques de sécurité IoT incluent notamment :

- **Authentification renforcée** – S’assurer que **chaque appareil et chaque utilisateur sont correctement authentifiés** avant d’accéder aux services. Il faut éviter les identifiants par défaut et utiliser des mots de passe robustes ou, mieux, des certificats uniques par appareil. Par exemple, désactiver les comptes par défaut (login *pi/raspberry* sur Raspberry Pi) et définir des identifiants uniques empêche un pirate d’accéder facilement à l’objet. De même, une authentification au niveau application (pour l’utilisateur final, ex. accès à une interface web de l’objet) doit être en place.
- **Intégrité du logiciel et du matériel** – Mettre en œuvre des mécanismes garantissant que l’appareil ne fonctionne qu’avec un **code de confiance**. Cela passe par un **secure boot** (le démarrage sécurisé vérifie la signature du firmware) et des mises à jour signées numériquement. Ainsi, on évite qu’un attaquant installe un firmware altéré. Il est aussi conseillé de **chiffrer le stockage local** (ex. carte SD chiffrée) pour empêcher la modification ou la lecture des données en cas de vol de l’appareil.
- **Confidentialité des communications et des données** – Toujours **chiffrer les échanges réseau** entre l’objet et le serveur (par ex., utiliser TLS pour MQTT ou HTTPS pour les API REST). Le chiffrement empêche un espion d’intercepter des informations sensibles ou de voler des identifiants sur le réseau. De plus, les données stockées dans le cloud ou les bases doivent être protégées (chiffrement côté serveur ou base de données sécurisée) pour éviter les fuites.
- **Contrôle d’accès strict** – Appliquer le principe du **moindre privilège** : un appareil ou utilisateur IoT ne devrait avoir accès qu’aux ressources nécessaires. Au niveau du broker MQTT, on peut par exemple restreindre chaque objet à certains topics. Il faut **fermer les interfaces non utilisées** et protéger celles nécessaires : désactiver les ports ouverts par défaut, sécuriser l’accès SSH (mot de passe robuste ou clés, ou même désactiver SSH si non indispensable), sécuriser l’accès aux interfaces web locales (ex: interface Node-RED ou dashboard utilisateur protégés par mot de passe), etc.
- **Utilisation de canaux et services sécurisés** – Éviter d’exposer l’objet sur des services publics non sécurisés. Par exemple, il vaut mieux utiliser un **broker MQTT privé** ou un service cloud sécurisé au lieu d’un broker public ouvert à tous. Avec un broker privé, on peut mettre en place une **authentification mutuelle** (certificat client côté objet et certificat serveur côté broker, i.e. MQTT over TLS avec certificats, aussi appelé mTLS). Cela garantit que seul l’appareil légitime communique avec le broker et vice-versa.
- **Supervision et maintenance régulière** – Surveiller l’activité du système permet de détecter des comportements anormaux (p. ex. un volume de messages inhabituel pouvant indiquer une tentative d’attaque). Des **logs** doivent être activés sur l’appareil et le serveur, et faire l’objet d’analyses ou d’alertes en cas d’événements suspects. Par ailleurs, il est crucial de **maintenir à jour** le firmware des objets et les services cloud tout au long de leur vie. Chaque mise à jour doit être diffusée de manière sécurisée (idéalement signée, et vérifiée par l’objet) et un processus de correction des failles de sécurité doit être planifié dès le départ. Des **audits de sécurité** et tests d’intrusion (pentests) périodiques sont également recommandés pour évaluer la robustesse de la solution.

En combinant ces différents mécanismes, on améliore significativement la **résilience** de l’ensemble de l’écosystème IoT face aux attaques. La sécurité IoT doit être envisagée globalement, dès la conception, afin d’éviter qu’une vulnérabilité exploitable compromise le système à n’importe quel niveau.
