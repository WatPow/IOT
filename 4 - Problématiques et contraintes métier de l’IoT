# Problématiques et contraintes métier de l’IoT

Le déploiement de solutions IoT dans la vie réelle s’accompagne de nombreuses contraintes **métier** et **techniques** qu’il faut intégrer dès la conception. Parmi les principales contraintes :

- **Coûts et ressources limitées** : Les projets IoT cherchent souvent à minimiser les coûts, tant au niveau du matériel que de l’exploitation. Cela signifie que les objets embarquent généralement des microcontrôleurs peu onéreux, donc **limités en puissance de calcul, en mémoire et en fonctionnalités** (pas de CPU puissant ni d’OS lourd). Ces limites matérielles restreignent les traitements locaux et parfois les possibilités de sécurité (crypto, stockage). De plus, l’utilisation de services cloud engendre des coûts d’infrastructure proportionnels au nombre d’appareils et au volume de données, qu’il faut contrôler.
- **Bande passante réseau réduite** : De nombreux objets communiquent via des réseaux à faible débit (par ex. réseaux LPWAN comme Sigfox ou LoRa, communications intermittentes sur GSM). Même en Wi-Fi, il peut y avoir des contraintes de réseau local partagé. On doit donc **optimiser la quantité de données échangées** (formats compacts, envoi périodique raisonné) pour s’adapter à ces canaux étroits.
- **Consommation d’énergie** : Beaucoup d’objets IoT fonctionnent sur batterie ou énergie limitée. La **consommation électrique** est un facteur critique : chaque transmission radio ou calcul intensif peut vider la batterie. Il faut alors privilégier des composants basse consommation et minimiser le temps de communication. Cette contrainte peut entrer en conflit avec la sécurité (chiffrement, communications fréquentes pour échange de clés, etc. consomment de l’énergie) – il faut trouver un équilibre.
- **Environnement physique et accessibilité** : Les objets connectés sont souvent déployés *in situ*, dans des lieux où ils peuvent être **facilement accessibles par des tiers** (par exemple dans la rue, à domicile chez un client, sur une machine dans une usine). Contrairement à un serveur dans un data center sécurisé, *n’importe qui* peut potentiellement manipuler un capteur IoT, tenter de l’ouvrir, d’en extraire la carte SD ou de le voler. L’environnement peut être hostile (température, humidité, vandalisme). Il faut donc prendre en compte la **sécurité physique** (boîtier scellé, vis anti-sabotage, détection d’ouverture…) pour protéger l’appareil.
- **Comportement des utilisateurs** : L’utilisateur final ou le client peut avoir un impact sur le dispositif IoT. Par exemple, un utilisateur peut **détourner l’usage** prévu de l’objet ou le connecter de manière non sécurisée. Il peut négliger d’installer les mises à jour de sécurité, ou au contraire chercher à « hacker » son propre appareil (pour l’optimiser ou en enlever les limitations), introduisant des risques supplémentaires. Il faut anticiper ces usages non prévus et sensibiliser les utilisateurs (ou implémenter des verrouillages quand nécessaire).
- **Durée de vie prolongée des appareils** : Contrairement aux smartphones remplacés tous les 2-3 ans, de nombreux objets industriels ou infrastructurels sont installés pour **10, 15 ans ou plus**. Cela signifie que la technologie évoluera autour d’eux (protocoles réseaux, algorithmes de sécurité) tandis qu’ils continueront de fonctionner. Ils devront peut-être s’adapter à de nouvelles exigences (par ex., passage à IPv6, ou remplacement d’un algorithme de chiffrement devenu obsolète). **La longévité pose aussi un problème de maintenance** : comment déployer des correctifs à grande échelle sur des objets disséminés sur le terrain pendant une décennie ? La planification du cycle de vie (mises à jour OTA, support à long terme) est donc une contrainte clé dans l’IoT.

En résumé, un projet IoT doit naviguer entre **des exigences parfois contradictoires** : offrir plus de fonctionnalités et de connectivité, tout en consommant peu d’énergie, en utilisant du matériel bon marché, sur des réseaux limités, et en garantissant la sécurité malgré un accès physique non contrôlé et une longue durée de vie. Ces contraintes expliquent pourquoi la sécurité IoT est souvent un défi – elle doit être adaptée *sur mesure* aux réalités du terrain.
